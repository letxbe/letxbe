"""

A `Target` is a `Document` that can be processed to generate and store a `Prediction` or `Feedback`.

"""
from typing import Literal, Optional, Union

from pydantic import BaseModel

from .artefact import Artefact, __ArtefactConnection
from .document import __DocumentBase, __WithParent, __WithStatus
from .label import Current, Feedback, Prediction


class __TargetBase(BaseModel):
    """
    `Document` information that is specific to a `Target`.

    role: a field that should be equal to `None`, as opposed to an `Artefact`
    prediction: a `Prediction` containing information generated by providers about the document.
    feedback: a `Feedback` containing aggregated confirmations, deletions or modifications
      of `__TargetBase.prediction` values.
    current: contains only information that should be considered true,
      by combining `Feedback` and `Prediction`.
    """

    role: Literal[None] = None
    prediction: Prediction = Prediction()
    feedback: Optional[Feedback] = None
    current: Current = Current()


class Target(
    __DocumentBase, __TargetBase, __WithParent, __WithStatus, __ArtefactConnection
):
    """
    Information about a `Target` that is available when accessing it directly.
    """


Document = Union[Target, Artefact]
